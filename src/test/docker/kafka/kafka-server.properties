#TODO inject ${BROKER_ID}
broker.id=0
listeners=PLAINTEXT://0.0.0.0:9092
host.name=0.0.0.0
port=9092
advertised.host.name=localhost
num.partitions=1
default.replication.factor=1
log.dirs=/vol/kafka/data
zookeeper.connection.timeout.ms=6000
zookeeper.connect=0.0.0.0:2181
#kafka.metrics.reporters=io.amient.kafka.metrics.TopicReporter
#kafka.metrics.tag.cluster=a
#kafka.metrics.tag.service=broker-0
#kafka.metrics.tag.host=host-001

delete.topic.enable=true
auto.create.topics.enable=true
log.retention.hours=24
log.retention.bytes=10485760
log.segment.bytes=1048576
log.retention.check.interval.ms=300000
log.cleaner.enable=true

# The number of threads handling network requests
num.network.threads=3

num.recovery.threads.per.data.dir=1

# The number of threads doing disk I/O
num.io.threads=8

# The send buffer (SO_SNDBUF) used by the socket server
socket.send.buffer.bytes=102400

# The receive buffer (SO_RCVBUF) used by the socket server
socket.receive.buffer.bytes=102400

# The maximum size of a request that the socket server will accept (protection against OOM)
socket.request.max.bytes=104857600


############################# Log Flush Policy #############################



# Messages are immediately written to the filesystem but by default we only fsync() to sync
# the OS cache lazily. The following configurations control the flush of data to disk.
# There are a few important trade-offs here:
#    1. Durability: Unflushed data may be lost if you are not using replication.
#    2. Latency: Very large flush intervals may lead to latency spikes when the flush does occur as there will be a lot of data to flush.
#    3. Throughput: The flush is generally the most expensive operation, and a small flush interval may lead to exceessive seeks.
# The settings below allow one to configure the flush policy to flush data after a period of time or
# every N messages (or both). This can be done globally and overridden on a per-topic basis.

# The number of messages to accept before forcing a flush of data to disk
#log.flush.interval.messages=10000

# The maximum amount of time a message can sit in a log before we force a flush
log.flush.interval.ms=500